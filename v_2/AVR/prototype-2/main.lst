   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	PORT_Init
  12               	PORT_Init:
  13               	.LFB0:
  14               		.file 1 "main.c"
   1:main.c        **** // device: 	AtMega 32
   2:main.c        **** // author:  Maciej Mielcarski
   3:main.c        **** 
   4:main.c        **** #define F_CPU 16000000UL
   5:main.c        **** #include <avr/io.h>
   6:main.c        **** #define FOSC 16000000UL
   7:main.c        **** #define BAUD 9600
   8:main.c        **** #define MYUBRR FOSC/16/BAUD-1	// ubrr = 103	normal asynch. mode
   9:main.c        **** #include <util/setbaud.h>
  10:main.c        **** 
  11:main.c        **** #define note1 PD0 
  12:main.c        **** #define note2 PD2 //
  13:main.c        **** #define note3 PD3 //
  14:main.c        **** #define note4 PD4 //
  15:main.c        **** #define note5 PD5 //
  16:main.c        **** #define note6 PD6 //
  17:main.c        **** #define note7 PD7 //
  18:main.c        **** #define note8 PC2 
  19:main.c        **** #define note9 PC3 
  20:main.c        **** #define note10 PC4 
  21:main.c        **** #define note11 PC5 
  22:main.c        **** #define note12 PC6 
  23:main.c        **** #define note13 PC7 
  24:main.c        **** 
  25:main.c        **** #define octave1 PB4 
  26:main.c        **** #define octave2 PB5 
  27:main.c        **** #define octave3 PB6 
  28:main.c        **** #define octave4 PB7 
  29:main.c        **** 
  30:main.c        **** int NOTES_tab[13] = {note1,note2,note3,note4,note5,note6,note7,note8,note9,note10,note11,note12,not
  31:main.c        **** int OCTAVES_tab[4] = {octave1,octave2,octave3,octave4};
  32:main.c        **** int PRESSED_BUTTON_tab[13][4]={0};
  33:main.c        **** 
  34:main.c        **** void PORT_Init()
  35:main.c        **** {
  15               		.loc 1 35 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  36:main.c        **** 	MCUCSR = (1<<JTD);			//disabling JTAG
  21               		.loc 1 36 0
  22 0000 80E8      		ldi r24,lo8(-128)
  23 0002 84BF      		out 0x34,r24
  37:main.c        **** 	MCUCSR = (1<<JTD);			//
  24               		.loc 1 37 0
  25 0004 84BF      		out 0x34,r24
  38:main.c        **** 	DDRD = 0xFF;
  26               		.loc 1 38 0
  27 0006 8FEF      		ldi r24,lo8(-1)
  28 0008 81BB      		out 0x11,r24
  39:main.c        **** 	DDRC = 0xFF;
  29               		.loc 1 39 0
  30 000a 84BB      		out 0x14,r24
  31 000c 0895      		ret
  32               		.cfi_endproc
  33               	.LFE0:
  35               	.global	USART_Init
  37               	USART_Init:
  38               	.LFB1:
  40:main.c        **** }
  41:main.c        **** 
  42:main.c        **** void USART_Init(unsigned int ubrr)		
  43:main.c        **** {
  39               		.loc 1 43 0
  40               		.cfi_startproc
  41               	.LVL0:
  42               	/* prologue: function */
  43               	/* frame size = 0 */
  44               	/* stack size = 0 */
  45               	.L__stack_usage = 0
  44:main.c        ****    UBRRH = (unsigned char)(ubrr>>8);	// set baud rate to 9600
  46               		.loc 1 44 0
  47 000e 90BD      		out 0x20,r25
  45:main.c        ****    UBRRL = (unsigned char)ubrr;		//
  48               		.loc 1 45 0
  49 0010 89B9      		out 0x9,r24
  46:main.c        ****    UCSRB = (1<<TXEN);		// Enable transmitter 
  50               		.loc 1 46 0
  51 0012 88E0      		ldi r24,lo8(8)
  52               	.LVL1:
  53 0014 8AB9      		out 0xa,r24
  47:main.c        ****    UCSRC = (1<<URSEL)|(1<<USBS)|(3<<UCSZ0);		// Set frame format: 8data, 2stop bit
  54               		.loc 1 47 0
  55 0016 8EE8      		ldi r24,lo8(-114)
  56 0018 80BD      		out 0x20,r24
  57 001a 0895      		ret
  58               		.cfi_endproc
  59               	.LFE1:
  61               	.global	uart_putchar
  63               	uart_putchar:
  64               	.LFB2:
  48:main.c        **** }
  49:main.c        **** 
  50:main.c        **** void uart_putchar(char c) 
  51:main.c        **** {
  65               		.loc 1 51 0
  66               		.cfi_startproc
  67               	/* prologue: function */
  68               	/* frame size = 0 */
  69               	/* stack size = 0 */
  70               	.L__stack_usage = 0
  71               	.LVL2:
  72               	.L4:
  52:main.c        **** 	while ( !(UCSRA & (1<<UDRE)) )	// Wait for empty transmit buffer 
  73               		.loc 1 52 0 discriminator 1
  74 001c 5D9B      		sbis 0xb,5
  75 001e 00C0      		rjmp .L4
  53:main.c        **** 	;
  54:main.c        ****     UDR = c;							// Put data into buffer, sends the data 
  76               		.loc 1 54 0
  77 0020 8CB9      		out 0xc,r24
  78 0022 0895      		ret
  79               		.cfi_endproc
  80               	.LFE2:
  82               	.global	uart_getchar
  84               	uart_getchar:
  85               	.LFB3:
  55:main.c        **** }
  56:main.c        **** 
  57:main.c        **** char uart_getchar(void) {
  86               		.loc 1 57 0
  87               		.cfi_startproc
  88               	/* prologue: function */
  89               	/* frame size = 0 */
  90               	/* stack size = 0 */
  91               	.L__stack_usage = 0
  92               	.L9:
  58:main.c        ****     loop_until_bit_is_set(UCSRA, RXC); 	// Wait until data exists
  93               		.loc 1 58 0 discriminator 1
  94 0024 5F9B      		sbis 0xb,7
  95 0026 00C0      		rjmp .L9
  59:main.c        ****     return UDR;
  96               		.loc 1 59 0
  97 0028 8CB1      		in r24,0xc
  60:main.c        **** }
  98               		.loc 1 60 0
  99 002a 0895      		ret
 100               		.cfi_endproc
 101               	.LFE3:
 103               	.global	uart_putstring
 105               	uart_putstring:
 106               	.LFB4:
  61:main.c        **** 
  62:main.c        **** void uart_putstring(char tab[])
  63:main.c        **** {
 107               		.loc 1 63 0
 108               		.cfi_startproc
 109               	.LVL3:
 110 002c CF93      		push r28
 111               	.LCFI0:
 112               		.cfi_def_cfa_offset 3
 113               		.cfi_offset 28, -2
 114 002e DF93      		push r29
 115               	.LCFI1:
 116               		.cfi_def_cfa_offset 4
 117               		.cfi_offset 29, -3
 118               	/* prologue: function */
 119               	/* frame size = 0 */
 120               	/* stack size = 2 */
 121               	.L__stack_usage = 2
 122               	.L12:
  64:main.c        **** 	int i =0;
  65:main.c        **** 	while (( UCSRA & (1<<UDRE))  == 0){};
 123               		.loc 1 65 0 discriminator 1
 124 0030 5D9B      		sbis 0xb,5
 125 0032 00C0      		rjmp .L12
 126 0034 EC01      		movw r28,r24
 127               	.LVL4:
 128               	.L13:
  66:main.c        ****         while (tab[i] != 0x00)
 129               		.loc 1 66 0
 130 0036 8991      		ld r24,Y+
 131 0038 8823      		tst r24
 132 003a 01F0      		breq .L17
  67:main.c        **** 		{ 
  68:main.c        ****             uart_putchar(tab[i]);
 133               		.loc 1 68 0
 134 003c 0E94 0000 		call uart_putchar
 135               	.LVL5:
 136 0040 00C0      		rjmp .L13
 137               	.L17:
 138               	/* epilogue start */
  69:main.c        **** 			i++; 
  70:main.c        ****         }
  71:main.c        **** }
 139               		.loc 1 71 0
 140 0042 DF91      		pop r29
 141 0044 CF91      		pop r28
 142 0046 0895      		ret
 143               		.cfi_endproc
 144               	.LFE4:
 146               	.global	uart_putint
 148               	uart_putint:
 149               	.LFB5:
  72:main.c        **** 
  73:main.c        **** void uart_putint(int value)
  74:main.c        **** {
 150               		.loc 1 74 0
 151               		.cfi_startproc
 152               	.LVL6:
 153 0048 CF93      		push r28
 154               	.LCFI2:
 155               		.cfi_def_cfa_offset 3
 156               		.cfi_offset 28, -2
 157 004a DF93      		push r29
 158               	.LCFI3:
 159               		.cfi_def_cfa_offset 4
 160               		.cfi_offset 29, -3
 161 004c CDB7      		in r28,__SP_L__
 162 004e DEB7      		in r29,__SP_H__
 163               	.LCFI4:
 164               		.cfi_def_cfa_register 28
 165 0050 6097      		sbiw r28,16
 166               	.LCFI5:
 167               		.cfi_def_cfa_offset 20
 168 0052 0FB6      		in __tmp_reg__,__SREG__
 169 0054 F894      		cli
 170 0056 DEBF      		out __SP_H__,r29
 171 0058 0FBE      		out __SREG__,__tmp_reg__
 172 005a CDBF      		out __SP_L__,r28
 173               	/* prologue: function */
 174               	/* frame size = 16 */
 175               	/* stack size = 18 */
 176               	.L__stack_usage = 18
  75:main.c        **** 	char tab[16];
  76:main.c        **** 	itoa(value,tab,10);
 177               		.loc 1 76 0
 178 005c 4AE0      		ldi r20,lo8(10)
 179 005e 50E0      		ldi r21,0
 180 0060 BE01      		movw r22,r28
 181 0062 6F5F      		subi r22,-1
 182 0064 7F4F      		sbci r23,-1
 183 0066 0E94 0000 		call itoa
 184               	.LVL7:
  77:main.c        **** 	uart_putstring(tab);
 185               		.loc 1 77 0
 186 006a CE01      		movw r24,r28
 187 006c 0196      		adiw r24,1
 188 006e 0E94 0000 		call uart_putstring
 189               	.LVL8:
 190               	/* epilogue start */
  78:main.c        **** }
 191               		.loc 1 78 0
 192 0072 6096      		adiw r28,16
 193 0074 0FB6      		in __tmp_reg__,__SREG__
 194 0076 F894      		cli
 195 0078 DEBF      		out __SP_H__,r29
 196 007a 0FBE      		out __SREG__,__tmp_reg__
 197 007c CDBF      		out __SP_L__,r28
 198 007e DF91      		pop r29
 199 0080 CF91      		pop r28
 200 0082 0895      		ret
 201               		.cfi_endproc
 202               	.LFE5:
 204               		.section	.rodata.str1.1,"aMS",@progbits,1
 205               	.LC0:
 206 0000 0A6B 6579 		.string	"\nkey:"
 206      3A00 
 207               	.LC1:
 208 0006 0A6F 6374 		.string	"\noct"
 208      00
 209               		.text
 210               	.global	note_on
 212               	note_on:
 213               	.LFB6:
  79:main.c        **** 
  80:main.c        **** void note_on(int key, int oct)
  81:main.c        **** {
 214               		.loc 1 81 0
 215               		.cfi_startproc
 216               	.LVL9:
 217 0084 0F93      		push r16
 218               	.LCFI6:
 219               		.cfi_def_cfa_offset 3
 220               		.cfi_offset 16, -2
 221 0086 1F93      		push r17
 222               	.LCFI7:
 223               		.cfi_def_cfa_offset 4
 224               		.cfi_offset 17, -3
 225 0088 CF93      		push r28
 226               	.LCFI8:
 227               		.cfi_def_cfa_offset 5
 228               		.cfi_offset 28, -4
 229 008a DF93      		push r29
 230               	.LCFI9:
 231               		.cfi_def_cfa_offset 6
 232               		.cfi_offset 29, -5
 233               	/* prologue: function */
 234               	/* frame size = 0 */
 235               	/* stack size = 4 */
 236               	.L__stack_usage = 4
 237 008c 8C01      		movw r16,r24
 238 008e EB01      		movw r28,r22
  82:main.c        **** 	//uart_putchar('N');
  83:main.c        **** 	//uart_putchar('-');
  84:main.c        **** 	uart_putstring("\nkey:");
 239               		.loc 1 84 0
 240 0090 80E0      		ldi r24,lo8(.LC0)
 241 0092 90E0      		ldi r25,hi8(.LC0)
 242               	.LVL10:
 243 0094 0E94 0000 		call uart_putstring
 244               	.LVL11:
  85:main.c        **** 	uart_putint(key);
 245               		.loc 1 85 0
 246 0098 C801      		movw r24,r16
 247 009a 0E94 0000 		call uart_putint
 248               	.LVL12:
  86:main.c        **** 	//uart_putchar('O');
  87:main.c        **** 	//uart_putchar('-');
  88:main.c        **** 	uart_putstring("\noct");
 249               		.loc 1 88 0
 250 009e 80E0      		ldi r24,lo8(.LC1)
 251 00a0 90E0      		ldi r25,hi8(.LC1)
 252 00a2 0E94 0000 		call uart_putstring
 253               	.LVL13:
  89:main.c        **** 	uart_putint(oct);
 254               		.loc 1 89 0
 255 00a6 CE01      		movw r24,r28
 256               	/* epilogue start */
  90:main.c        **** }
 257               		.loc 1 90 0
 258 00a8 DF91      		pop r29
 259 00aa CF91      		pop r28
 260               	.LVL14:
 261 00ac 1F91      		pop r17
 262 00ae 0F91      		pop r16
 263               	.LVL15:
  89:main.c        **** 	uart_putint(oct);
 264               		.loc 1 89 0
 265 00b0 0C94 0000 		jmp uart_putint
 266               	.LVL16:
 267               		.cfi_endproc
 268               	.LFE6:
 270               	.global	note_off
 272               	note_off:
 273               	.LFB7:
  91:main.c        **** 
  92:main.c        **** void note_off(int key, int oct)
  93:main.c        **** {
 274               		.loc 1 93 0
 275               		.cfi_startproc
 276               	.LVL17:
 277               	/* prologue: function */
 278               	/* frame size = 0 */
 279               	/* stack size = 0 */
 280               	.L__stack_usage = 0
 281 00b4 0895      		ret
 282               		.cfi_endproc
 283               	.LFE7:
 285               		.section	.text.startup,"ax",@progbits
 286               	.global	main
 288               	main:
 289               	.LFB8:
  94:main.c        **** 
  95:main.c        **** }
  96:main.c        **** 
  97:main.c        **** int main(void)
  98:main.c        **** {
 290               		.loc 1 98 0
 291               		.cfi_startproc
 292               	/* prologue: function */
 293               	/* frame size = 0 */
 294               	/* stack size = 0 */
 295               	.L__stack_usage = 0
  99:main.c        **** 	USART_Init(MYUBRR);
 296               		.loc 1 99 0
 297 0000 87E6      		ldi r24,lo8(103)
 298 0002 90E0      		ldi r25,0
 299 0004 0E94 0000 		call USART_Init
 300               	.LVL18:
 100:main.c        **** 	PORT_Init();
 301               		.loc 1 100 0
 302 0008 0E94 0000 		call PORT_Init
 303               	.LVL19:
 304               	.LBB6:
 101:main.c        **** 
 102:main.c        **** 	while(1)
 103:main.c        **** 	{
 104:main.c        **** 		
 105:main.c        **** 		for(int i=0; i<13; i++)		// notes loop
 106:main.c        **** 		{
 107:main.c        **** 			if(i < 7)	// PORTD
 108:main.c        **** 			{
 109:main.c        **** 				PORTD |= (1<<NOTES_tab[i]);
 110:main.c        **** 			}
 111:main.c        **** 			else		// PORTC
 112:main.c        **** 			{
 113:main.c        **** 				PORTC |= (1<<NOTES_tab[i]);
 305               		.loc 1 113 0
 306 000c CC24      		clr r12
 307 000e C394      		inc r12
 308 0010 D12C      		mov r13,__zero_reg__
 309               	.L30:
 310               	.LVL20:
 311 0012 00E0      		ldi r16,lo8(NOTES_tab)
 312 0014 10E0      		ldi r17,hi8(NOTES_tab)
 313 0016 90E0      		ldi r25,lo8(PRESSED_BUTTON_tab)
 314 0018 692E      		mov r6,r25
 315 001a 90E0      		ldi r25,hi8(PRESSED_BUTTON_tab)
 316 001c 792E      		mov r7,r25
 105:main.c        **** 		{
 317               		.loc 1 105 0
 318 001e C0E0      		ldi r28,0
 319 0020 D0E0      		ldi r29,0
 320               	.LVL21:
 321               	.L29:
 107:main.c        **** 			{
 322               		.loc 1 107 0
 323 0022 C730      		cpi r28,7
 324 0024 D105      		cpc r29,__zero_reg__
 325 0026 04F4      		brge .L22
 109:main.c        **** 			}
 326               		.loc 1 109 0
 327 0028 22B3      		in r18,0x12
 328 002a C601      		movw r24,r12
 329 002c F801      		movw r30,r16
 330 002e 0080      		ld r0,Z
 331 0030 00C0      		rjmp 2f
 332               		1:
 333 0032 880F      		lsl r24
 334 0034 991F      		rol r25
 335               		2:
 336 0036 0A94      		dec r0
 337 0038 02F4      		brpl 1b
 338 003a 822B      		or r24,r18
 339 003c 82BB      		out 0x12,r24
 340 003e 00C0      		rjmp .L23
 341               	.L22:
 342               		.loc 1 113 0
 343 0040 25B3      		in r18,0x15
 344 0042 C601      		movw r24,r12
 345 0044 F801      		movw r30,r16
 346 0046 0080      		ld r0,Z
 347 0048 00C0      		rjmp 2f
 348               		1:
 349 004a 880F      		lsl r24
 350 004c 991F      		rol r25
 351               		2:
 352 004e 0A94      		dec r0
 353 0050 02F4      		brpl 1b
 354 0052 822B      		or r24,r18
 355 0054 85BB      		out 0x15,r24
 356               	.L23:
 357               	.LVL22:
 358 0056 80E0      		ldi r24,lo8(OCTAVES_tab)
 359 0058 882E      		mov r8,r24
 360 005a 80E0      		ldi r24,hi8(OCTAVES_tab)
 361 005c 982E      		mov r9,r24
 105:main.c        **** 		{
 362               		.loc 1 105 0 discriminator 1
 363 005e 7301      		movw r14,r6
 364 0060 A12C      		mov r10,__zero_reg__
 365 0062 B12C      		mov r11,__zero_reg__
 366               	.LVL23:
 367               	.L26:
 368               	.LBB7:
 114:main.c        **** 			}
 115:main.c        **** 
 116:main.c        **** 			// if(i == 12)		// last key case
 117:main.c        **** 			// {
 118:main.c        **** 			// 	if(PINC & (1<<NOTES_tab[12]) && !(PRESSED_BUTTON_tab[12][0]) )
 119:main.c        **** 			// 	{
 120:main.c        **** 			// 		PRESSED_BUTTON_tab[12][0] = 1;
 121:main.c        **** 			// 		note_on(12,0);
 122:main.c        **** 			// 	}
 123:main.c        **** 			// 	else if( !(PINC & (1<<NOTES_tab[12])) && PRESSED_BUTTON_tab[12][0])
 124:main.c        **** 			// 	{
 125:main.c        **** 			// 		PRESSED_BUTTON_tab[12][0] = 0;
 126:main.c        **** 			// 		note_off(12,0);
 127:main.c        **** 			// 	}
 128:main.c        **** 			// }
 129:main.c        **** 
 130:main.c        **** 			for(int j=0; j<4; j++)		// octaves loop
 131:main.c        **** 			{
 132:main.c        **** 				if( PINB & (1<<OCTAVES_tab[j]) && !(PRESSED_BUTTON_tab[i][j]) )
 369               		.loc 1 132 0
 370 0064 86B3      		in r24,0x16
 371 0066 F401      		movw r30,r8
 372 0068 2081      		ld r18,Z
 373 006a F2E0      		ldi r31,2
 374 006c 8F0E      		add r8,r31
 375 006e 911C      		adc r9,__zero_reg__
 376 0070 90E0      		ldi r25,0
 377 0072 022E      		mov r0,r18
 378 0074 00C0      		rjmp 2f
 379               		1:
 380 0076 9595      		asr r25
 381 0078 8795      		ror r24
 382               		2:
 383 007a 0A94      		dec r0
 384 007c 02F4      		brpl 1b
 385 007e 80FF      		sbrs r24,0
 386 0080 00C0      		rjmp .L24
 387               		.loc 1 132 0 is_stmt 0 discriminator 1
 388 0082 F701      		movw r30,r14
 389 0084 8081      		ld r24,Z
 390 0086 9181      		ldd r25,Z+1
 391 0088 892B      		or r24,r25
 392 008a 01F4      		brne .L24
 133:main.c        **** 				{
 134:main.c        **** 					PRESSED_BUTTON_tab[i][j] = 1;
 393               		.loc 1 134 0 is_stmt 1
 394 008c D182      		std Z+1,r13
 395 008e C082      		st Z,r12
 135:main.c        **** 					note_on(i,j);
 396               		.loc 1 135 0
 397 0090 B501      		movw r22,r10
 398 0092 CE01      		movw r24,r28
 399 0094 0E94 0000 		call note_on
 400               	.LVL24:
 401 0098 00C0      		rjmp .L25
 402               	.L24:
 136:main.c        **** 				}
 137:main.c        **** 				else if( !(PINB & (1<<OCTAVES_tab[j])) && PRESSED_BUTTON_tab[i][j] )
 403               		.loc 1 137 0
 404 009a 86B3      		in r24,0x16
 405 009c 90E0      		ldi r25,0
 406 009e 00C0      		rjmp 2f
 407               		1:
 408 00a0 9595      		asr r25
 409 00a2 8795      		ror r24
 410               		2:
 411 00a4 2A95      		dec r18
 412 00a6 02F4      		brpl 1b
 413 00a8 80FD      		sbrc r24,0
 414 00aa 00C0      		rjmp .L25
 415               		.loc 1 137 0 is_stmt 0 discriminator 1
 416 00ac F701      		movw r30,r14
 417 00ae 8081      		ld r24,Z
 418 00b0 9181      		ldd r25,Z+1
 419 00b2 892B      		or r24,r25
 420 00b4 01F0      		breq .L25
 138:main.c        **** 				{
 139:main.c        **** 					PRESSED_BUTTON_tab[i][j] = 0;
 421               		.loc 1 139 0 is_stmt 1
 422 00b6 1182      		std Z+1,__zero_reg__
 423 00b8 1082      		st Z,__zero_reg__
 424               	.LVL25:
 425               	.L25:
 130:main.c        **** 			{
 426               		.loc 1 130 0 discriminator 2
 427 00ba FFEF      		ldi r31,-1
 428 00bc AF1A      		sub r10,r31
 429 00be BF0A      		sbc r11,r31
 430               	.LVL26:
 431 00c0 82E0      		ldi r24,2
 432 00c2 E80E      		add r14,r24
 433 00c4 F11C      		adc r15,__zero_reg__
 434 00c6 94E0      		ldi r25,4
 435 00c8 A916      		cp r10,r25
 436 00ca B104      		cpc r11,__zero_reg__
 437 00cc 01F4      		brne .L26
 438               	.LBE7:
 140:main.c        **** 					note_off(i,j);
 141:main.c        **** 				}
 142:main.c        **** 			}
 143:main.c        **** 			
 144:main.c        **** 			if(i < 7)	// PORTD
 439               		.loc 1 144 0
 440 00ce C730      		cpi r28,7
 441 00d0 D105      		cpc r29,__zero_reg__
 442 00d2 04F4      		brge .L27
 145:main.c        **** 			{
 146:main.c        **** 				PORTD &= ~(1<<NOTES_tab[i]);
 443               		.loc 1 146 0
 444 00d4 92B3      		in r25,0x12
 445 00d6 9601      		movw r18,r12
 446 00d8 F801      		movw r30,r16
 447 00da 0080      		ld r0,Z
 448 00dc 00C0      		rjmp 2f
 449               		1:
 450 00de 220F      		lsl r18
 451 00e0 331F      		rol r19
 452               		2:
 453 00e2 0A94      		dec r0
 454 00e4 02F4      		brpl 1b
 455 00e6 822F      		mov r24,r18
 456 00e8 8095      		com r24
 457 00ea 8923      		and r24,r25
 458 00ec 82BB      		out 0x12,r24
 459 00ee 00C0      		rjmp .L28
 460               	.L27:
 147:main.c        **** 			}
 148:main.c        **** 			else		// PORT C
 149:main.c        **** 			{
 150:main.c        **** 				PORTC &= ~(1<<NOTES_tab[i]);
 461               		.loc 1 150 0
 462 00f0 95B3      		in r25,0x15
 463 00f2 9601      		movw r18,r12
 464 00f4 F801      		movw r30,r16
 465 00f6 0080      		ld r0,Z
 466 00f8 00C0      		rjmp 2f
 467               		1:
 468 00fa 220F      		lsl r18
 469 00fc 331F      		rol r19
 470               		2:
 471 00fe 0A94      		dec r0
 472 0100 02F4      		brpl 1b
 473 0102 822F      		mov r24,r18
 474 0104 8095      		com r24
 475 0106 8923      		and r24,r25
 476 0108 85BB      		out 0x15,r24
 477               	.L28:
 105:main.c        **** 		{
 478               		.loc 1 105 0 discriminator 2
 479 010a 2196      		adiw r28,1
 480               	.LVL27:
 481 010c 0E5F      		subi r16,-2
 482 010e 1F4F      		sbci r17,-1
 483 0110 F8E0      		ldi r31,8
 484 0112 6F0E      		add r6,r31
 485 0114 711C      		adc r7,__zero_reg__
 486 0116 CD30      		cpi r28,13
 487 0118 D105      		cpc r29,__zero_reg__
 488 011a 01F0      		breq .+2
 489 011c 00C0      		rjmp .L29
 490 011e 00C0      		rjmp .L30
 491               	.LBE6:
 492               		.cfi_endproc
 493               	.LFE8:
 495               	.global	PRESSED_BUTTON_tab
 496               		.section .bss
 499               	PRESSED_BUTTON_tab:
 500 0000 0000 0000 		.zero	104
 500      0000 0000 
 500      0000 0000 
 500      0000 0000 
 500      0000 0000 
 501               	.global	OCTAVES_tab
 502               		.data
 505               	OCTAVES_tab:
 506 0000 0400      		.word	4
 507 0002 0500      		.word	5
 508 0004 0600      		.word	6
 509 0006 0700      		.word	7
 510               	.global	NOTES_tab
 513               	NOTES_tab:
 514 0008 0000      		.word	0
 515 000a 0200      		.word	2
 516 000c 0300      		.word	3
 517 000e 0400      		.word	4
 518 0010 0500      		.word	5
 519 0012 0600      		.word	6
 520 0014 0700      		.word	7
 521 0016 0200      		.word	2
 522 0018 0300      		.word	3
 523 001a 0400      		.word	4
 524 001c 0500      		.word	5
 525 001e 0600      		.word	6
 526 0020 0700      		.word	7
 527               		.text
 528               	.Letext0:
 529               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccc6HVb3.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccc6HVb3.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccc6HVb3.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccc6HVb3.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccc6HVb3.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccc6HVb3.s:12     .text:0000000000000000 PORT_Init
     /tmp/ccc6HVb3.s:37     .text:000000000000000e USART_Init
     /tmp/ccc6HVb3.s:63     .text:000000000000001c uart_putchar
     /tmp/ccc6HVb3.s:84     .text:0000000000000024 uart_getchar
     /tmp/ccc6HVb3.s:105    .text:000000000000002c uart_putstring
     /tmp/ccc6HVb3.s:148    .text:0000000000000048 uart_putint
     /tmp/ccc6HVb3.s:212    .text:0000000000000084 note_on
     /tmp/ccc6HVb3.s:272    .text:00000000000000b4 note_off
     /tmp/ccc6HVb3.s:288    .text.startup:0000000000000000 main
     /tmp/ccc6HVb3.s:513    .data:0000000000000008 NOTES_tab
     /tmp/ccc6HVb3.s:499    .bss:0000000000000000 PRESSED_BUTTON_tab
     /tmp/ccc6HVb3.s:505    .data:0000000000000000 OCTAVES_tab

UNDEFINED SYMBOLS
itoa
__do_copy_data
__do_clear_bss
